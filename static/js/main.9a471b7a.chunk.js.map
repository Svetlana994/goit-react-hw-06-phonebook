{"version":3,"sources":["components/Section/Section.styles.js","components/Section/Section.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styles.js","components/Contacts/Contacts.jsx","components/Form/Form.styles.js","components/Form/Form.jsx","App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js"],"names":["Container","Title","Section","title","children","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","getFilter","state","contacts","filter","getfilteredContacts","allContacts","items","normalizedFilter","toLowerCase","contact","includes","Filter","value","useSelector","dispatch","useDispatch","TextField","label","size","InputLabelProps","shrink","multiline","onChange","e","actions","target","ContactItem","NumberText","Contacts","options","map","Button","startIcon","fontSize","variant","color","onClick","WrapperForm","Form","useState","setName","setNumber","handleInputChange","event","currentTarget","resetForm","onSubmit","preventDefault","find","alert","required","type","App","length","createReducer","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9a471b7a.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const Container = styled.div`\n  width: 500px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  margin-bottom: 20px;\n  text-align: center;\n  color: #333;\n`;\n","import PropTypes from \"prop-types\";\nimport { Container, Title } from \"./Section.styles\";\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    {children}\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\n\nconst addContact = createAction(\"contact/Add\", ({ name, number }) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contact/Delete\");\n\nconst changeFilter = createAction(\"contact/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","export const getFilter = (state) => state.contacts.filter;\n\nexport const getfilteredContacts = (state) => {\n  const allContacts = state.contacts.items;\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <TextField\n        id=\"standard-multiline-flexible\"\n        label=\"Find contacts by name\"\n        size=\"medium\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        multiline\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import styled from \"@emotion/styled/macro\";\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  list-style: none;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #3561d0;\n  }\n`;\n\nexport const NumberText = styled.span`\n  margin-right: 30px;\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\nimport { getfilteredContacts } from \"../../redux/phonebook/phonebook-selectors\";\n\nimport Filter from \"../Filter/Filter\";\n\nimport { ContactItem, NumberText } from \"./Contacts.styles\";\nimport { BiWinkSmile } from \"react-icons/bi\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst Contacts = () => {\n  const options = useSelector(getfilteredContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Filter />\n      <ul>\n        {options.map(({ id, name, number }) => {\n          return (\n            <ContactItem key={id}>\n              <BiWinkSmile size={18} />\n              <span>{name}:</span>\n              <NumberText>{number}</NumberText>\n              <Button\n                startIcon={<DeleteIcon fontSize=\"small\" />}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => dispatch(actions.deleteContact(id))}\n              >\n                Delete\n              </Button>\n            </ContactItem>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from \"@emotion/styled/macro\";\n\nexport const WrapperForm = styled.div`\n  margin-bottom: 20px;\n  padding: 30px;\n  box-shadow: 0px 0px 5px 1px #333;\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 35px;\n`;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\n\nimport { WrapperForm, Container } from \"./Form.styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector((state) => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (\n      contacts.find(\n        (contact) => name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(actions.addContact({ name, number }));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <WrapperForm>\n      <form onSubmit={handleSubmit}>\n        <Container>\n          <TextField\n            name=\"name\"\n            value={name}\n            id=\"outlined-helperText\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            onChange={handleInputChange}\n          />\n        </Container>\n\n        <Container>\n          <TextField\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            id=\"outlined-helperText\"\n            label=\"Number\"\n            variant=\"outlined\"\n            required\n            onChange={handleInputChange}\n          />\n        </Container>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Add contact\n        </Button>\n      </form>\n    </WrapperForm>\n  );\n}\n\nexport default Form;\n","import { useSelector } from \"react-redux\";\n\nimport Section from \"./components/Section/Section\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Form from \"./components/Form/Form\";\n\nfunction App() {\n  const contacts = useSelector((state) => state.contacts.items);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      {!!contacts.length && (\n        <Section title=\"Contacts\">\n          <Contacts />\n        </Section>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./phonebook/phonebook-reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}